import React, { useState } from "react";
import { View, Alert, Platform, ScrollView } from "react-native";
import { Text, Button, List, Divider, IconButton } from "react-native-paper";
let RNFS: typeof import('react-native-fs') | undefined;
// console.log(RNFS);
if (Platform.OS === 'ios' || Platform.OS === 'android') {
  RNFS = require('react-native-fs');
}
let FileViewer: any;
if (Platform.OS === "android") {
  FileViewer = require('react-native-file-viewer');
}

import DMMTitle from "../Components/Title";

// The Helpscreen Contains User Guide and FAQs
const HelpScreen = () => {
  //state variable to set expand
  const [expanded, setExpanded] = useState<string | null>(null);
  const [language, setLanguage] = useState<"en" | "hi">("en"); // ЁЯСИ language state

  // this button handles on press expand and shrink of answer element
  const handlePress = (question: string) => {
    setExpanded(expanded === question ? null : question);
  };
  // this function use to open user guide in pdf view
  const handleOpenGuide = async () => {
    try {
      if (Platform.OS === "android") {
        let destPath = '';
        if (RNFS) {
          destPath = `${RNFS.DocumentDirectoryPath}/DMM_B18_App_User_Guide.pdf`;
        }
        if (Platform.OS === "android" && RNFS) {
          // Copy PDF from assets to documents folder
          await RNFS.copyFileAssets("DMM_B18_App_User_Guide.pdf", destPath);
        } else {
          if (Platform.OS === "android" && RNFS) {
            // Copy PDF from bundle to documents folder on iOS
            const sourcePath = `${RNFS.MainBundlePath}/DMM_B18_App_User_Guide.pdf`;
            await RNFS.copyFile(sourcePath, destPath);
          }
        }


        await FileViewer.open(destPath);
      }
    } catch (error) {
      console.error("Error opening PDF:", error);
      Alert.alert("Error", "Could not open the PDF file.");
    }
  };
  //the FAQ array of objects with question and answer keys and values.
  const faqData = [
    {
      question: " How do I connect to my DMM-B18 device?",
      answer:
        "1. Go to the Home tab.\n" +
        "2. Tap Scan Device.\n" +
        "3. Select your device from the list.\n\n" +
        "ЁЯТб Tip: If the device was previously saved, it will connect automatically.",
    },
    {
      question: "ЁЯФН What should I do if I can't find my DMM-B18?",
      answer:
        "ЁЯФБ Restart the app and follow the steps in **\" How do I connect to my DMM-B18 device?\"** again.\n" +
        "Make sure Bluetooth is turned on and the device is powered.",
    },
    {
      question: "ЁЯУВ How do I find my saved data?",
      answer:
        "You can access your saved data in your device storage:\n\n" +
        "System Storage тЖТ Download тЖТ Innovative_instruments тЖТ Data",
    },
    {
      question: "ЁЯУд How do I share my saved data?",
      answer:
        "You can share data as PDF or CSV files:\n" +
        "1. Go to the Records tab.\n" +
        "2. Tap the ЁЯУБ Select File button and choose the file you want to share.\n" +
        "3. Tap the ЁЯУд Share icon to share the data via email or other apps.",
    },
    {
      question: "ЁЯТ╛ What data can I save?",
      answer:
        "You can save data for each client separately. Each record includes:\n" +
        "ЁЯУЕ Date | тП░ Time | тЪЦя╕П Weight | ЁЯМбя╕П Temperature | ЁЯТз Humidity | ЁЯСд Client details.",
    },
  ];

  const faqDataHi = [
  {
    question: "ЁЯУ╢ рдореИрдВ рдЕрдкрдиреЗ DMM-B18 рдбрд┐рд╡рд╛рдЗрд╕ рд╕реЗ рдХреИрд╕реЗ рдХрдиреЗрдХреНрдЯ рдХрд░реВрдБ?",
    answer:
      "1. рд╣реЛрдо рдЯреИрдм рдкрд░ рдЬрд╛рдПрдВред\n" +
      "2. рд╕реНрдХреИрди рдбрд┐рд╡рд╛рдЗрд╕ рдкрд░ рдЯреИрдк рдХрд░реЗрдВред\n" +
      "3. рд╕реВрдЪреА рдореЗрдВ рд╕реЗ рдЕрдкрдирд╛ рдбрд┐рд╡рд╛рдЗрд╕ рдЪреБрдиреЗрдВред\n\n" +
      "ЁЯТб рдЯрд┐рдк: рдЕрдЧрд░ рдбрд┐рд╡рд╛рдЗрд╕ рдкрд╣рд▓реЗ рд╕реЗ рд╕реЗрд╡ рд╣реИ, рддреЛ рд╡рд╣ рдЕрдкрдиреЗ-рдЖрдк рдХрдиреЗрдХреНрдЯ рд╣реЛ рдЬрд╛рдПрдЧрд╛ред",
  },
  {
    question: "ЁЯФН рдЕрдЧрд░ рдореЗрд░рд╛ DMM-B18 рдирд╣реАрдВ рдорд┐рд▓ рд░рд╣рд╛ рд╣реИ рддреЛ рдХреНрдпрд╛ рдХрд░реЗрдВ?",
    answer:
      "ЁЯФБ рдРрдк рдХреЛ рджреЛрдмрд╛рд░рд╛ рд╢реБрд░реВ рдХрд░реЗрдВ рдФрд░ рдлрд┐рд░ рд╕реЗ \"рдореИрдВ рдЕрдкрдиреЗ DMM-B18 рдбрд┐рд╡рд╛рдЗрд╕ рд╕реЗ рдХреИрд╕реЗ рдХрдиреЗрдХреНрдЯ рдХрд░реВрдБ?\" рд╡рд╛рд▓реЗ рд╕реНрдЯреЗрдкреНрд╕ рдлреЙрд▓реЛ рдХрд░реЗрдВред\n" +
      "рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдмреНрд▓реВрдЯреВрде рдСрди рд╣реИ рдФрд░ рдбрд┐рд╡рд╛рдЗрд╕ рдЪрд╛рд▓реВ рд╣реИред",
  },
  {
    question: "ЁЯУВ рдореИрдВ рдЕрдкрдирд╛ рд╕реЗрд╡ рдХрд┐рдпрд╛ рд╣реБрдЖ рдбреЗрдЯрд╛ рдХрд╣рд╛рдБ рдкрд╛ рд╕рдХрддрд╛ рд╣реВрдБ?",
    answer:
      "рдЖрдк рдЕрдкрдирд╛ рдбреЗрдЯрд╛ рдпрд╣рд╛рдБ рдкрд╛ рд╕рдХрддреЗ рд╣реИрдВ:\n\n" +
      "System Storage тЖТ Download тЖТ Innovative_instruments тЖТ Data",
  },
  {
    question: "ЁЯУд рдореИрдВ рдЕрдкрдирд╛ рд╕реЗрд╡ рдХрд┐рдпрд╛ рд╣реБрдЖ рдбреЗрдЯрд╛ рдХреИрд╕реЗ рд╢реЗрдпрд░ рдХрд░реВрдБ?",
    answer:
      "рдЖрдк рдЕрдкрдирд╛ рдбреЗрдЯрд╛ PDF рдпрд╛ CSV рдлрд╛рдЗрд▓ рдХреЗ рд░реВрдк рдореЗрдВ рд╢реЗрдпрд░ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:\n" +
      "1. рд░рд┐рдХреЙрд░реНрдбреНрд╕ рдЯреИрдм рдкрд░ рдЬрд╛рдПрдВред\n" +
      "2. ЁЯУБ рдлрд╛рдЗрд▓ рдЪреБрдиреЗрдВ рдмрдЯрди рдкрд░ рдЯреИрдк рдХрд░реЗрдВ рдФрд░ рдлрд╛рдЗрд▓ рдЪреБрдиреЗрдВред\n" +
      "3. ЁЯУд рд╢реЗрдпрд░ рдЖрдЗрдХрди рдкрд░ рдЯреИрдк рдХрд░реЗрдВ рдФрд░ рдИрдореЗрд▓ рдпрд╛ рдЕрдиреНрдп рдРрдк рд╕реЗ рд╢реЗрдпрд░ рдХрд░реЗрдВред",
  },
  {
    question: "ЁЯТ╛ рдореИрдВ рдХреМрди-рд╕рд╛ рдбреЗрдЯрд╛ рд╕реЗрд╡ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?",
    answer:
      "рдЖрдк рд╣рд░ рдХреНрд▓рд╛рдЗрдВрдЯ рдХреЗ рд▓рд┐рдП рдЕрд▓рдЧ-рдЕрд▓рдЧ рдбреЗрдЯрд╛ рд╕реЗрд╡ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рд╣рд░ рд░рд┐рдХреЙрд░реНрдб рдореЗрдВ рд╢рд╛рдорд┐рд▓ рд╣реЛрдЧрд╛:\n" +
      "ЁЯУЕ рддрд╛рд░реАрдЦ | тП░ рд╕рдордп | тЪЦя╕П рд╡рдЬрди | ЁЯМбя╕П рддрд╛рдкрдорд╛рди | ЁЯТз рдирдореА | ЁЯСд рдХреНрд▓рд╛рдЗрдВрдЯ рдХреА рдЬрд╛рдирдХрд╛рд░реАред",
  },
];

  const currentFaq = language === "en" ? faqData : faqDataHi; // ЁЯСИ pick based on language

  return (
    <View style={{ flex: 1, backgroundColor: "#fff" }}>
      {/* Title */}
      <DMMTitle />

      {/* Main content scrollable */}
      <ScrollView
        style={{ flex: 1 }}
        contentContainerStyle={{ padding: 16, paddingBottom: 40 }}
      >
        {/* Welcome Section */}
        <Text
          style={{
            fontSize: 22,
            fontWeight: "600",
            textAlign: "center",
            marginBottom: 8,
          }}
        >
          Welcome to the Help Center!
        </Text>

        <Text
          style={{
            marginBottom: 16,
            textAlign: "center",
            fontSize: 16,
            color: "#555",
          }}
        >
          If youтАЩre new here, we recommend reading our{" "}
          <Text style={{ fontWeight: "bold" }}>User Guide</Text> to get started.
        </Text>

        {/* User Guide Button */}
        <Button
          mode="contained"
          icon="book-open-variant"
          onPress={handleOpenGuide}
          style={{ marginBottom: 24, alignSelf: "center", borderRadius: 10 }}
          contentStyle={{ paddingVertical: 4 }}
        >
          Open User Guide
        </Button>

        <Divider style={{ marginVertical: 10 }} />

        {/* FAQ Section */}
        <View
          style={{
            flexDirection: "row",
            alignItems: "center",
            justifyContent: "space-between",
            marginBottom: 12,
            marginTop: 8,
          }}
        >
          <Text style={{ fontSize: 17, fontWeight: "bold" }}>
            Frequently Asked Questions
          </Text>

          {/* ЁЯСЗ Language Toggle Button */}
          <Button
            mode="outlined"
            onPress={() => setLanguage(language === "en" ? "hi" : "en")}
          >
            {language === "en" ? "рд╣рд┐рдВрджреА" : "English"}
          </Button>
        </View>

        {/* map over currentFaq and show FAQ. */}
        {currentFaq.map((faq, index) => (
          <List.Accordion
            key={index}
            title={faq.question}
            expanded={expanded === faq.question}
            onPress={() => handlePress(faq.question)}
            style={{
              backgroundColor: "#f9f9f9",
              marginBottom: 8,
              borderRadius: 10,
              overflow: "hidden",
              borderWidth: 1,
              borderColor: "#ddd",
            }}
            titleStyle={{ fontSize: 16, fontWeight: "500" }}
          >
            <View style={{ padding: 12, backgroundColor: "#fff" }}>
              <Text style={{ fontSize: 15, lineHeight: 20 }}>{faq.answer}</Text>
            </View>
          </List.Accordion>
        ))}
      </ScrollView>
    </View>
  );
};

export default HelpScreen;
